openapi: 3.0.3
info:
  title: Swagger ABCP API
  version: pre-relise
servers:
  - url: https://mogadi.shop/api/abcp
tags:
  - name: ABCP API
    description: test version of api
paths:
  /get-products:
    get:
      tags:
        - Search
      summary: search product
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
        - $ref: '#/components/parameters/article'
        - $ref: '#/components/parameters/brand'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /batch-products:
    post:
      tags:
        - Search
      summary: batch search products
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/UserCredentials'
                - $ref: '#/components/schemas/BatchSearchBody'
        required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /create-order:
    post:
      tags:
        - Order
      summary: creating order
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/UserCredentials'
                - $ref: '#/components/schemas/CreateOrderBody'
        required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Ошибка при создании заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /orders-list:
    get:
      tags:
        - Order
      summary: getting order list
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
        - $ref: '#/components/parameters/orders'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /shipment-offices:
    get:
      tags:
        - Order
      summary: getting order shipment offices
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
      responses:
        '200':
          $ref: '#/components/responses/dictionarySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /shipment-methods:
    get:
      tags:
        - Order
      summary: getting order shipment methods
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
      responses:
        '200':
          $ref: '#/components/responses/dictionarySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /shipment-addresses:
    get:
      tags:
        - Order
      summary: getting order shipment addresses
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
      responses:
        '200':
          $ref: '#/components/responses/dictionarySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /payment-methods:
    get:
      tags:
        - Order
      summary: getting order payment methods
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
      responses:
        '200':
          $ref: '#/components/responses/dictionarySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /order-statuses:
    get:
      tags:
        - Order
      summary: getting order statuses
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
      responses:
        '200':
          $ref: '#/components/responses/statusesSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /order-positions-statuses:
    get:
      tags:
        - Order
      summary: getting order positions statuses
      parameters:
        - $ref: '#/components/parameters/userlogin'
        - $ref: '#/components/parameters/userpsw'
      responses:
        '200':
          $ref: '#/components/responses/statusesSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
components:
  responses:
    dictionarySuccess:
      description: success
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              additionalProperties:
                type: string
    statusesSuccess:
      description: success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderStatuses'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Bad Request"
              message:
                type: string
                example: "error message"
              code:
                type: number
                example: 0
              status:
                type: number
                example: 400
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Unauthorized"
              message:
                type: string
                example: "Wrong login or password"
              code:
                type: number
                example: 0
              status:
                type: number
                example: 403
    MethodNotAllowed:
      description: Method not allowed
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Bad Request"
              message:
                type: string
                example: "Method not allowed"
              code:
                type: number
                example: 0
              status:
                type: number
                example: 400
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Not found"
              message:
                type: string
                example: "Requested resource not found"
              code:
                type: number
                example: 0
              status:
                type: number
                example: 404
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Internal server error"
              message:
                type: string
                example: "internal server error occured"
              code:
                type: number
                example: 0
              status:
                type: number
                example: 500
  parameters:
    userlogin:
      name: userlogin
      in: query
      description: User login
      required: true
      schema:
        type: string
    userpsw:
      name: userpsw
      in: query
      description: User password
      required: true
      schema:
        type: string
    orders:
      name: orders
      in: query
      description: Orders ids
      required: true
      schema:
        type: array
        items:
          type: number
    article:
      name: article
      in: query
      description: Article
      required: true
      schema:
        type: string
    brand:
      name: brand
      in: query
      description: Brand
      schema:
        type: string
  schemas:
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: Общий статус ответа (0 означает ошибку)
          example: 0
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      properties:
        position:
          type: object
          description: Описание позиции товара, по которой возникла ошибка
          properties:
            description:
              type: string
              description: Описание товара
              example: "Лямбда-зонд"
            number:
              type: string
              description: Номер товара
              example: "13627101680"
            brand:
              type: string
              description: Бренд товара
              example: "BMW"
            quantity:
              type: integer
              description: Количество товара
              example: 1
            price:
              type: number
              format: float
              description: Цена товара
              example: 8225
            comment:
              type: string
              description: Комментарий к товару
              example: "test product"
            supplierCode:
              type: string
              description: Код поставщика
              example: "sp_246938911"
        field:
          type: string
          description: Поле, в котором возникла ошибка
          example: "shipmentDate"
        message:
          type: string
          description: Сообщение об ошибке
          example: "Неверный формат даты"
        actualPrice:
          type: number
          format: float
          description: Актуальная цена товара (если ошибка связана с ценой)
          example: 69097
    OrderStatuses:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OrderStatus'
    OrderStatus:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        isFinal:
          type: boolean
    UserCredentials:
      type: object
      properties:
        userlogin:
          type: string
        userpsw:
          type: string
    BatchSearchBody:
      type: array
      items:
        properties:
          number:
            type: string
          brand:
            type: string
    CreateOrderBody:
      type: object
      properties:
        userlogin:
          type: string
        userpsw:
          type: string
        paymentMethod:
          type: string
        shipmentMethod:
          type: string
        shipmentAddress:
          type: string
        shipmentDate:
          type: string
        shipmentOffice:
          type: string
        comment:
          type: string
        positions:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              number:
                type: string
              brand:
                type: string
              quantity:
                type: number
              price:
                type: number
              comment:
                type: string
              supplierCode:
                type: string
    OrderProduct:
      type: object
      properties:
        brand:
          type: string
        number:
          type: string
        numberFix:
          type: string
        code:
          type: string
        description:
          type: string
        quantity:
          type: number
        price:
          type: string
        deadline:
          type: string
        comment:
          type: string
        statusCode:
          type: string
        status:
          type: string
    Order:
      type: object
      properties:
        id:
          type: number
        code:
          type: string
        statusCode:
          type: string
        status:
          type: string
        positionsQuantity:
          type: number
        sum:
          type: number
        date:
          type: string
        comment:
          type: string
        paymentMethodCode:
          type: string
        paymentMethod:
          type: string
        shipmentMethodCode:
          type: string
        shipmentMethod:
          type: string
        shipmentAddressCode:
          type: string
        shipmentAddress:
          type: string
        shipmentOfficeCode:
          type: string
        shipmentOffice:
          type: string
        deliveryCost:
          type: number
        positions:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
    Product:
      type: object
      properties:
        article:
          type: string
        cleanedArticle:
          type: string
        brand:
          type: string
        description:
          type: string
        quantity:
          type: number
        deliveryTime:
          type: string
        price:
          type: number
        storageId:
          type: string
